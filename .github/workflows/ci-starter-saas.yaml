name: myapp with saas-pg-redis

on:
  push:
    branches:
      - main
  pull_request:

env:
  RUST_TOOLCHAIN: nightly
  TOOLCHAIN_PROFILE: minimal

jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Install dia tool
#          run: sudo apt-get update && sudo apt-get install dia

   rustfmt:
     name: 1/2 Check Style
     runs-on: ubuntu-latest
     
     permissions:
       contents: read
     
     steps:
       - name: update OS repo index
          run: apt-get update 
       - name: Install dia tool
          run: apt-get install dia
       - name: Checkout the code
         uses: actions/checkout@v4
       - uses: actions-rs/toolchain@v1
         with:
           profile: ${{ env.TOOLCHAIN_PROFILE }}
           toolchain: ${{ env.RUST_TOOLCHAIN }}
           override: true
           components: rustfmt
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  test:
    name: 2/2 cargo test with running postgres and redis services
    # needs: [rustfmt, clippy]
    needs: [rustfmt]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - "6379:6379"
      postgres:
        image: postgres
        env:
          POSTGRES_DB: myapp_development
          POSTGRES_USER: loco
          POSTGRES_PASSWORD: loco
        ports:
          - "5432:5432"
        # Set health checks to wait until postgres has started
        options: --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Run cargo test
        run: cargo test --all-features --all
        env:
          REDIS_URL: redis://localhost:${{job.services.redis.ports[6379]}}
          DATABASE_URL: postgres://loco:loco@localhost:5432/myapp_development

